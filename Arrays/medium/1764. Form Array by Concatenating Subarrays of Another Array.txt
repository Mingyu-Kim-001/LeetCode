#Time: O(n*m), n,m<=10^3
class Solution:
    def canChoose(self, groups: List[List[int]], nums: List[int]) -> bool:
        def search(subarray,start):
            table = [0]*(len(nums)-start)
            j = 0
            for i in range(1,len(subarray)):
                while j>0 and subarray[j]!=subarray[i]:
                    j = table[j-1]
                if subarray[j]==subarray[i]:
                    j+=1
                    table[i] = j
            j = 0
            for i in range(start,len(nums)):
                while j>0 and subarray[j]!=nums[i]:
                    j = table[j-1]
                if subarray[j]==nums[i]:
                    j+=1
                if j==len(subarray):
                    return i+1
            return -1
        
        start = 0
        for subarray in groups:
            start = search(subarray,start)
            if start==-1: return False
        return True