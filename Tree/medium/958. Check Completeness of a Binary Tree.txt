# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
from collections import deque
from collections import deque
class Solution:
    def isCompleteTree(self, root: TreeNode) -> bool:
        dq = deque([])
        dq.append(root)
        isEnd = False
        
        while dq:
            node = dq.popleft()
            if isEnd:
                if node.left!=None or node.right!=None:
                    return False
            else:
                if node.left==None:
                    if node.right!=None: return False
                    isEnd = True
                elif node.right==None:
                    isEnd = True
                    dq.append(node.left)
                else:
                    dq.append(node.left)
                    dq.append(node.right)
        return True